"""
Django settings for DjangoAdminSample project.

Generated by 'django-admin startproject' using Django 2.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from . import local_settings
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = local_settings.SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django_modern_admin',
    'django.contrib.admin',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Products',
    'Orders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_modern_admin.users_middleware.OnlineNowMiddleware'
]

ROOT_URLCONF = 'DjangoAdminSample.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoAdminSample.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
# STATIC_ROOT = os.path.join(BASE_DIR, 'django-app', 'assets', 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


GOOGLE_ANALYTICS_SERVICE_ACCOUNT_JSON = os.path.join(BASE_DIR, 'djangoadmin.json')
GOOGLE_ANALYTICS_ID = local_settings.GOOGLE_ANALYTICS_ID

TOP_LEFT_CHART = {
    'title': 'Revenue',
    'baseChartModel': 'Orders.Orders',
    'baseChartLineField': 'orderTotal',
    'baseChartDateField': 'orderDate',
    'doughnutChartNameField': 'orderCategory',
    'doughnutChartValueField': 'orderTotal',
    'tableFieldsForDay': {'orderQty', 'productPrice', 'orderTotal'},
    'tableFieldsForMonth': {'orderQty', 'orderTotal'}
}

MINI_BAR_CHART = {
    'first': {
        'icon': 'mdi-action-account-child',
        'chartModel': 'auth.User',
        'chartModelDateField': 'date_joined',
        'color': 'green',
    },
    'second': {
        # 'icon': '',
        'chartModel': 'Orders.Orders',
        'chartModelDateField': 'orderDate',
        'color': 'deep-purple',
    },
    'third': {
        'icon': 'mdi-action-announcement',
        'chartModel': 'auth.User',
        'chartModelDateField': 'date_joined',
        'color': 'blue-grey',
    },
    'fourth': {
        # 'icon': '',
        'chartModel': 'Orders.Orders',
        'chartModelDateField': 'orderDate',
        'color': 'orange'
    }
}

VECTOR_MAP_JS_URL = '/static/django_modern_admin/js/plugins/jvectormap/jvector-turkey.js'

MODEL_LIST = {
    'left': {
        'modelIcon': 'mdi-content-select-all',
        'modelName': 'Products.Products',
        'listFields': {'name', 'price', },
        'filterField': 'price__lte',
        'filterValue': '400',
        'orderField': 'price',
    },
    'right': {
        'modelName': 'Orders.Orders',
        'listFields': ['product', 'orderQty'],
        'orderField': 'orderDate'
    }
}
